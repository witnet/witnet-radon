{
  "operator_info_description": {
    "get_key": "Accede a la '{{key}}' clave de la entrada {{inputType}}, y administra el valor como {{outputType}}",
    "cast": "Convierte el {{inputType}} de entrada en un {{outputType}}",
    "array": {
      "count": "Cuenta el número de elementos en el Array de entrada",
      "filter": "Descarta los elementos del Array entrante que no pasan el filtro {{filter}}",
      "flatten": "Elimina {{depth}} niveles de profundidad redundantes del Array de entrada",
      "map": "Aplica el script {{subscript}} en cada uno de los elementos del Array de entrada",
      "reduce": "Combina todos los objetos en el Array de entrada a un solo elemento de tipo {{outputType}} aplicando la función de reducción {{reducer}}",
      "some": "Comprueba si al menos uno de los elementos del Array de entrada cumple con la condición definida por la función de filtro {{filter}}",
      "sort": "Ordena el Array de entrada en orden {{order}}",
      "take": "Toma los elementos del Array entre las posiciones {{min}} y {{max}} y descarta todo el resto"
    },
    "boolean": {
      "match": "Coincide la entrada Boolean con \"{{subscript}}\" y devuelve el valor asociado a ella. Similar a un switch",
      "negate": "Niega la entrada booleana (la hace True si era False, o False si era True)"
    },
    "bytes": {
      "hash": "Calcula el hash de los Bytes de entrada"
    },
    "integer": {
      "absolute": "Calcula el valor absoluto del Integer de entrada",
      "greater_than": "Comprueba si el Integer de entrada es mayor que {{argument}} (la salida será booleana)",
      "lessThan": "Comprueba si el Integer de entrada es mayor que {{argument}} (la salida será booleana)",
      "match": "Coincide la entrada Integer con {{subscript}} y devuelve el valor asociado a ella. Similar a un switch",
      "modulo": "Calcula el valor Integer de la división de una entrada Integer entre {{argument}}",
      "multiply": "Multiplicar el Integer de entrada por {{factor}}",
      "negate": "Calcula el negativo del Integer de entrada (e.g. 1 se convierte en -1)",
      "power": "Calcula el Integer de entrada elevado a {{exponent}}",
      "reciprocal": "Calcula el recíproco o inverso multiplicativo (1/x) del Integer de entrada, y proporciona el resultado como Float.",
      "sum": "Suma {{addend}} al Integer de entrada"
    },
    "float": {
      "absolute": "Calcula el valor absoluto del Float de entrada, y proporciona el resultado como Float",
      "celling": "Calcula el valor Integer más pequeño, el cual es mayor o igual que el Float de entrada",
      "greater_than": "Compara si la entrada Float es mayor que {{value}} y proporciona el resultado como Boolean",
      "floor": "Calcula el valor Integer más grande, el cual es menor o igual a la entrada Float, y proporciona el resultado como Integer",
      "less_than": "Compara si la entrada Float es menor que {{argument}} y proporciona el resultado como Boolean",
      "modulo": "Calcula el valor obtenido de la división del Float de entrada y {{argument}} Luego proporciona el resultado como Float",
      "multiply": "Calcula el resultado del producto del Float de entrada por {{argument}}. Luego proporciona el resultado como Integer",
      "negate": "Calcula el valor absoluto del Float de entrada, y proporciona el resultado como Float",
      "power": "Calcula el Float de entrada elevado a la potencia de {{exponent}}. Luego, proporciona el resultado como un Float",
      "reciprocal": "Calcula el recíproco o inverso multiplicativo (/x) del Integer de entrada, y proporciona el resultado como Float",
      "round": "Redondea la parte entera de la entrada Float y proporciona el resultado como Integer",
      "sum": "Calcula la suma entre el Float de entrada y {{addend}}. Luego proporciona el resultado como Float",
      "truncate": "Toma la parte entera de la entrada Float y proporciona el resultado como Integer"
    },
    "map": {
      "entries": "Obtiene una lista de tuplas clave-valor del mapa de entrada, y proporciona el resultado como Array",
      "keys": "Obtiene una lista con los nombres claves del Map de entrada y proporciona el resultado como un Array de Strings.",
      "values": "Obtiene una lista con los valores del Map de entrada, y proporciona el resultado como un Array de {{type}}"
    },
    "string": {
      "length": "Cuenta el número de elementos del String de entrada, y proporciona el resultado como Integer.",
      "match": "Hace coincidir el String de entrada con {{subscript}} y devuelve el valor asociado a ella. Similar a un switch",
      "parse_json_array": "Interpreta el String de entrada como una estructura de Array codificada en JSON.",
      "parse_json_map": "Interpreta el String de entrada como una estructura Map codificada en JSON.",
      "parse_xml": "Interpreta el String de entrada como una estructura Map codificada como XML.",
      "to_lower_case": "Convertir en minúsculas el String de entrada, y proporciona el resultado como String",
      "to_upper_case": "Convertir en mayúsculas el String de entrada, y proporciona el resultado como String"
    }
  },
  "aggregation_tally_description": {
    "filter": {
      "deviation_standard": "Descarta cualquier resultado que sea más de \"{{number}}\" veces el tiempo de desviación estándar lejos del promedio. En resumen: elimina los valores atípicos",
      "mode": "Descarta cualquier resultado que sea diferente de la moda. En resumen: elimina los valores atípicos"
    },
    "reducer": {
      "mode": "Calcula la moda de los valores",
      "average_mean": "Calcula la media aritmética de los valores",
      "average_median": "Calcula la mediana aritmética de los valores",
      "deviation_standard": "Calcula la desviación estándar de los valores",
      "hash_concatenate": "Calcula el hash y concatena los valores"
    }
  }
}